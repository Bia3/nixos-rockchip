name: "Release Images"
on:
  push:
    branches:
      - main
jobs:
  create_release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v20
      with:
        nix_path: nixpkgs=channel:nixos-unstable
        extra_nix_config: |
          experimental-features = nix-command flakes
          extra-platforms = aarch64-linux
    - name: Get version
      id: version
      run: echo "::set-output name=version::$(nix eval .#image.Quartz64A.imageName | cut -f4 -d-)"
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASES_TOKEN }}
      with:
        tag_name: v${{ steps.version.outputs.version }}
        release_name: NixOS ${{ steps.version.outputs.version }}
        draft: false
        prerelease: false
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

  build_and_upload:
    needs: create_release
    strategy:
      max-parallel: 1
      matrix:
        platform: 
        - Quartz64A
        - Quartz64B
        - SoQuartzModelA
        - SoQuartzCM4
        - SoQuartzBlade
        - Rock64
        - RockPro64
        - RockPCRK3399
        - PinebookPro
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - run: |
        DEBIAN_FRONTEND=noninteractive
        sudo apt-get update -q -y && sudo apt-get install -q -y qemu-system-aarch64 qemu-efi binfmt-support qemu-user-static
    - uses: cachix/install-nix-action@v20
      with:
        nix_path: nixpkgs=channel:nixos-unstable
        extra_nix_config: |
          experimental-features = nix-command flakes
          extra-platforms = aarch64-linux
    - uses: cachix/cachix-action@v12
      with:
        name: nabam-nixos-rockchip
        authToken: '${{ secrets.CACHIX_TOKEN }}'
        extraPullNames: nabam-nixos-rockchip
        pushFilter: '(.*-nixos-sd-image-.*)\.img$'
    - run: |
        nix build -j4 .#image.${{ matrix.platform }}
    - name: Get version
      id: version
      run: echo "::set-output name=version::$(find result/sd-image -name nixos-sd-image-*-aarch64-linux.img | cut -f5 -d-)"
    - name: Compress image
      run: zstd ./result/sd-image/nixos-sd-image-${{ steps.version.outputs.version }}-aarch64-linux.img -o ./${{ matrix.platform }}.img.zst
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASES_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./${{ matrix.platform }}.img.zst
        asset_name: ${{ matrix.platform }}.img.zst
        asset_content_type: application/x-zstd
